* {
	box-sizing: border-box;
	outline: none !important;
	user-select: none;
	touch-action: manipulation;
	-webkit-user-select: none;
	-webkit-touch-callout: none;
	-webkit-tap-highlight-color: transparent;
}
*:not(.material-icons) {
	font-family: sans-serif;
}
:root {
	--color-primary: #1f75fe;
	--color-accent: #00fa9a;
	--color-warning: #ffcc00;
	--color-alert: #ff0028;
}
img, svg {
	-webkit-user-drag: none;
	user-drag: none;
}
body {
	color: var(--color-text);
}
main {
	display: flex;
	justify-content: center;
	flex-wrap: wrap;
	position: fixed;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
}
mark {
	background: unset;
	margin-bottom: .5em;
}
mark header {
	width: min(40vw, 40vh);
	height: min(4vw, 4vh);
	border-radius: .75em;
	background-color: var(--color-primary);
}
mark span {
	position: relative;
	display: block;
	width: 60%;
	aspect-ratio: 1/1;
	margin: 0 auto;
	background-color: rgba(150, 150, 150, 0.5);
	overflow: hidden;
	z-index: 2;
}
mark span:before {
	position: absolute;
	content: "";
	bottom: 0;
	left: 0;
	width: 100%;
	height: var(--h);
	z-index: 0;
	opacity: 0;
	background-color: var(--color-accent);
	transition: all 250ms ease-in-out;
}
mark span:first-of-type {
  border-radius: 0 0 50% 50%;
}
mark span:last-of-type {
  border-radius: 50% 50% 0 0;
}
mark span:last-of-type:after {
	position: absolute;
	content: "";
	top: 0;
	bottom: 0;
	left: 50%;
	width: min(1vw, 1vh);
	z-index: 0;
	background-color: var(--color-accent);
	transform: translateX(-50%);
	transition: all 250ms ease-in-out;
	opacity: 0;
}
mark span:last-of-type div {
	position: absolute;
	left: 50%;
	bottom: calc(var(--h) - 1px);
	width: 0;
	height: 0;
	border-style: solid;
	border-width: 0 min(2vw, 2vh) min(2vw, 2vh) min(2vw, 2vh);
	border-color: transparent transparent var(--color-accent) transparent;
	transition: opacity 250ms ease-in-out, bottom 250ms ease-in-out;
	transform: translateX(-50%);
	opacity: 0;
	visibility: hidden;
}
mark.started span:before, mark.started span:last-of-type:after, mark.started span:last-of-type div {
	visibility: visible;
	opacity: 1;
}
mark.warning span::before, mark.warning span:last-of-type:after {
	animation: warning 1s linear infinite;
}
mark.warning span:last-of-type div {
	animation: warning-border 1s linear infinite;
}
mark.alert span::before, mark.alert span:last-of-type:after {
	animation: alert 500ms linear infinite;
}
mark.alert span:last-of-type div {
	animation: alert-border 500ms linear infinite;
}
mark.exceeded {
	animation: shake 1s linear infinite;
}
mark.exceeded span:last-of-type div {
	border-color: transparent transparent var(--color-alert) transparent !important;
}
mark.exceeded span:before, mark.exceeded span:last-of-type::after {
	background-color: var(--color-alert) !important;
}
section {
	text-align: center;
	font-size: 3em;
	margin-bottom: .5em;
	width: 100%;
	transition: all 250ms ease-in-out;
	color: var(--color-text);
}
section.warning {
	animation: warning-text 1s linear infinite;
}
section.alert {
	animation: alert-text 500ms linear infinite;
}
section.exceeded {
	color: var(--color-alert) !important;
}
footer {
	position: fixed;
	display: flex;
	justify-content: center;
	align-items: center;
	left: 50%;
	bottom: calc(env(safe-area-inset-bottom, 0) + 1em);
	transform: translateX(-50%);
}
input {
	border-radius: 6px;
	margin-right: .5em;
	font-size: 1.75em;
	width: 3.5em;
	line-height: 0;
	text-align: right;
	border: none;
	color: var(--color-text);
}
input:disabled {
	-webkit-user-drag: none;
	-webkit-user-select: none;
	user-select: none;
	pointer-events: none;
	user-drag: none;
}
button {
	position: relative;
	display: flex;
	justify-content: center;
	align-items: center;
	height: 3em;
	border-radius: 6px;
	background-color: var(--color-primary);
	border: none;
	cursor: pointer;
	overflow: hidden;
}
button .material-icons {
	font-size: 2.5em !important;
}
button :before {
	position: absolute;
	content: "";
	top: 0;
	left: 0;
	bottom: 0;
	right: 0;
	z-index: 1;
	background-color: rgba(255, 255, 255, 0.25);
	opacity: 0;
}
button:hover :before {
	animation: fadein 250ms ease-in-out forwards;
}
button:not(:hover) :before {
	animation: fadeout 250ms ease-in-out forwards;
}
.material-icons {
	color: var(--color-text);
}
@media (prefers-color-scheme: dark) {
	:root {
		--color-text: #fff;
	}
	body {
		background-color: #121212;
	}
	input {
		background-color: rgba(255,255,255,0.1);
	}
}
@media (prefers-color-scheme: light) {
	:root {
		--color-text: #333;
	}
	input {
		background-color: rgba(0,0,0,0.1);
	}
}
@keyframes fadein {
	from {
		opacity: 0;
	}
	to {
		opacity: 1;
	}
}
@keyframes fadeout {
	from {
		opacity: 1;
	}
	to {
		opacity: 0;
	}
}
@keyframes warning {
	0% {
		background-color: var(--color-accent);
	}
	50% {
		background-color: var(--color-warning);
	}
	100% {
		background-color: var(--color-accent);
	}
}
@keyframes warning-text {
	0% {
		color: var(--color-text);
	}
	50% {
		color: var(--color-warning);
	}
	100% {
		color: var(--color-text);
	}
}
@keyframes warning-border {
	0% {
		border-color: transparent transparent var(--color-accent) transparent;
	}
	50% {
		border-color: transparent transparent var(--color-warning) transparent;
	}
	100% {
		border-color: transparent transparent var(--color-accent) transparent;
	}
}
@keyframes alert {
	0% {
		background-color: var(--color-warning);
	}
	50% {
		background-color: var(--color-alert);
	}
	100% {
		background-color: var(--color-warning);
	}
}
@keyframes alert-text {
	0% {
		color: var(--color-warning);
	}
	50% {
		color: var(--color-alert);
	}
	100% {
		color: var(--color-warning);
	}
}
@keyframes alert-border {
	0% {
		border-color: transparent transparent var(--color-warning) transparent;
	}
	50% {
		border-color: transparent transparent var(--color-alert) transparent;
	}
	100% {
		border-color: transparent transparent var(--color-warning) transparent;
	}
}
@keyframes shake {
	0% {
		transform: rotate(-5deg);
	}
	5.5% {
		transform: rotate(5deg);
	}
	11% {
		transform: rotate(0deg);
	}
	16.5% {
		transform: rotate(-5deg);
	}
	22% {
		transform: rotate(5deg);
	}
	27.5% {
		transform: rotate(-5deg);
	}
	38.5% {
		transform: rotate(5deg);
	}
	44% {
		transform: rotate(0deg);
	}
	50% {
		transform: rotate(0deg);
	}
}